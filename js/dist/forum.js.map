{"version":3,"sources":["webpack://module.exports/webpack/bootstrap","webpack://module.exports/external \"flarum.core.compat['extend']\"","webpack://module.exports/external \"flarum.core.compat['app']\"","webpack://module.exports/external \"flarum.core.compat['components/Button']\"","webpack://module.exports/external \"flarum.core.compat['Model']\"","webpack://module.exports/external \"flarum.core.compat['utils/PostControls']\"","webpack://module.exports/external \"flarum.core.compat['components/CommentPost']\"","webpack://module.exports/external \"flarum.core.compat['components/Modal']\"","webpack://module.exports/external \"flarum.core.compat['components/EventPost']\"","webpack://module.exports/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://module.exports/./src/forum/components/SplitPostModal.js","webpack://module.exports/./src/forum/components/SplitController.js","webpack://module.exports/./src/forum/components/DiscussionSplit.js","webpack://module.exports/./src/forum/index.js","webpack://module.exports/./src/forum/addSplitControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","SplitPostModal_SplitPostModal","init","_Modal","this","newDiscussionTitle","prop","setController","controller","split","className","title","app","translator","trans","content","oninput","withAttr","Button_default","a","type","loading","disabled","onsubmit","e","_this","preventDefault","data","FormData","append","startPostId","endPostNumber","request","method","url","forum","attribute","serialize","raw","then","discussion","id","slug","attributes","startUser","isUnread","hide","route","loaded","SplitController","reset","start","postId","postNumber","$","each","attr","show","end","DiscussionSplit_DiscussionSplit","icon","descriptionKey","props","post","descriptionData","count","target","href","config","initializers","add","store","models","discussions","canSplit","external_flarum_core_compat_Model_default","postComponents","discussionSplit","external_flarum_core_compat_extend_","PostControls_default","items","contentType","number","onclick","external_flarum_core_compat_app_default","CommentPost_default","splitModal","modal","style","display","addSplitControl"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/EventPost'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Modal from \"flarum/components/Modal\";\r\nimport Button from \"flarum/components/Button\";\r\n\r\nexport default class SplitPostModal extends Modal {\r\n    init() {\r\n        super.init();\r\n\r\n        this.newDiscussionTitle = m.prop('');\r\n\r\n    }\r\n\r\n    setController(controller) {\r\n        this.split = controller;\r\n    }\r\n\r\n    className() {\r\n        return 'SplitPostModal Modal--small';\r\n    }\r\n\r\n    title() {\r\n        return app.translator.trans('flagrow-split.forum.modal.title');\r\n    }\r\n\r\n    content() {\r\n        return [\r\n            m('div', {className: 'Modal-body'}, [\r\n                m('div', {className: 'Form Form--centered'}, [\r\n                    m('div', {className: 'Form-group'}, [\r\n                        m('label', {},  app.translator.trans('flagrow-split.forum.modal.new_discussion_label')),\r\n                        m('input', {\r\n                            className: 'FormControl',\r\n                            name: 'new_discussion_title',\r\n                            value: this.newDiscussionTitle(),\r\n                            oninput: m.withAttr('value', this.newDiscussionTitle)\r\n                        })\r\n                    ]),\r\n                    m('div', {className: 'Form-group'}, [\r\n                        m(Button, {\r\n                            className: 'Button Button--primary Button--block',\r\n                            type: 'submit',\r\n                            loading: this.loading,\r\n                            disabled: !this.newDiscussionTitle()\r\n                        }, app.translator.trans('flagrow-split.forum.modal.submit_button'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ];\r\n    }\r\n\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.loading = true;\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('title', this.newDiscussionTitle());\r\n        data.append('start_post_id', this.split.startPostId);\r\n        data.append('end_post_number', this.split.endPostNumber);\r\n\r\n        app.request({\r\n            method: 'POST',\r\n            url: app.forum.attribute('apiUrl') + '/split',\r\n            serialize: raw => raw,\r\n            data\r\n        }).then(\r\n            data => {\r\n                var discussion = {};\r\n                discussion.id = m.prop(data.data.id);\r\n                discussion.slug = m.prop(data.data.attributes.slug);\r\n                discussion.startUser = m.prop(data.data.attributes.startUser);\r\n                discussion.isUnread = m.prop(data.data.attributes.isUnread);\r\n                this.hide();\r\n                m.route(app.route.discussion(discussion));\r\n            },\r\n            this.loaded.bind(this)\r\n        );\r\n    }\r\n}\r\n","export default class SplitController {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    start(postId, postNumber) {\r\n        this.reset();\r\n\r\n        this.startPostId = postId;\r\n\r\n        $('.PostStream-item').each(function () {\r\n            if ($(this).attr('data-number') >= postNumber) {\r\n                $('.flagrow-split-endSplitButton', $(this)).show();\r\n            }\r\n        });\r\n\r\n        $('.flagrow-split-startSplitButton').hide();\r\n    }\r\n\r\n    end(postNumber) {\r\n        this.endPostNumber = postNumber;\r\n    }\r\n\r\n    reset() {\r\n        this.startPostId = null;\r\n        this.endPostNumber = null;\r\n    }\r\n}\r\n","import EventPost from \"flarum/components/EventPost\";\r\n\r\nexport default class DiscussionSplit extends EventPost {\r\n\r\n    /**\r\n     * Get the name of the event icon.\r\n     *\r\n     * @return {String}\r\n     */\r\n    icon() {\r\n        return 'fas fa-code-branch';\r\n    }\r\n\r\n    /**\r\n     * Get the translation key for the description of the event.\r\n     *\r\n     * @return {String}\r\n     */\r\n    descriptionKey() {\r\n        if (this.props.post.content()['toNew']) {\r\n            return 'flagrow-split.forum.post.was_split_to';\r\n        }\r\n\r\n        return 'flagrow-split.forum.post.was_split_from';\r\n    }\r\n\r\n    /**\r\n     * Get the translation data for the description of the event.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    descriptionData() {\r\n        return {\r\n            'count': this.props.post.content()['count'],\r\n            'target': <a className=\"EventPost-Split-target\" href={this.props.post.content()['url']}\r\n                         config={m.route}>{this.props.post.content()['title']}</a>\r\n        };\r\n    }\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport Model from 'flarum/Model';\r\n\r\nimport addSplitControl from './addSplitControl';\r\nimport SplitController from './components/SplitController';\r\nimport DiscussionSplit from './components/DiscussionSplit';\r\n\r\napp.initializers.add('flagrow-split', app => {\r\n\r\n    app.store.models.discussions.prototype.canSplit = Model.attribute('canSplit');\r\n\r\n    app.postComponents.discussionSplit = DiscussionSplit;\r\n\r\n    var splitController = new SplitController();\r\n\r\n    addSplitControl(splitController);\r\n});\r\n","import {extend} from \"flarum/extend\";\r\nimport app from \"flarum/app\";\r\nimport PostControls from \"flarum/utils/PostControls\";\r\nimport Button from \"flarum/components/Button\";\r\nimport CommentPost from \"flarum/components/CommentPost\";\r\nimport SplitPostModal from \"./components/SplitPostModal\";\r\n\r\nexport default function (controller) {\r\n\r\n    extend(PostControls, 'moderationControls', function(items, post) {\r\n        const discussion = post.discussion();\r\n\r\n        if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() == 1) return;\r\n\r\n        items.add('splitFrom', [\r\n            m(Button, {\r\n                icon: 'fas fa-code-branch',\r\n                className: 'flagrow-split-startSplitButton',\r\n                onclick: () => {\r\n                    controller.start(post.id(), post.number());\r\n                }\r\n            }, app.translator.trans('flagrow-split.forum.split.from'))\r\n        ]);\r\n    });\r\n\r\n    extend(CommentPost.prototype, 'footerItems', function(items) {\r\n        const post = this.props.post;\r\n        const discussion = post.discussion();\r\n\r\n        if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() == 1) return;\r\n\r\n        items.add('splitTo', [\r\n            m(Button, {\r\n                icon: 'fas fa-code-branch',\r\n                className: 'flagrow-split-endSplitButton Button Button--link',\r\n                onclick: () => {\r\n                    controller.end(post.number());\r\n                    var splitModal = new SplitPostModal();\r\n                    splitModal.setController(controller);\r\n                    app.modal.show(splitModal);\r\n                },\r\n                style: {display: 'none'}\r\n            }, app.translator.trans('flagrow-split.forum.split.to'))\r\n        ]);\r\n    });\r\n}\r\n"],"sourceRoot":""}